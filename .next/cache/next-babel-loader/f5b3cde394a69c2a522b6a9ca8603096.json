{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from \"@shopify/polaris\";\nimport store from \"store-js\";\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nfunction ProductList() {\n  _s();\n\n  var _useQuery = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get(\"ids\")\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log(\"this is data:\", data);\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"These are the products selected:\"), data.nodes.map(function (item) {\n    return __jsx(\"p\", {\n      key: item.id\n    }, item.title);\n  }));\n}\n\n_s(ProductList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/hillary/Documents/Shopify/sample-shopify-app/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","variables","ids","get","loading","error","data","message","console","log","nodes","map","item","id","title"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SACEC,IADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,kBAAkB,GAAGR,GAAH,mBAAxB;;AA4BA,SAASS,WAAT,GAAuB;AAAA;;AAAA,kBACYR,QAAQ,CAACO,kBAAD,EAAqB;AAC5DE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEJ,KAAK,CAACK,GAAN,CAAU,KAAV;AAAP;AADiD,GAArB,CADpB;AAAA,MACbC,OADa,aACbA,OADa;AAAA,MACJC,KADI,aACJA,KADI;AAAA,MACGC,IADH,aACGA,IADH;;AAKrB,MAAIF,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,IAA7B;AAEA,SACE,mBACE,qDADF,EAGGA,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAe,UAACC,IAAD,EAAU;AACxB,WAAO;AAAG,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAb,OAAkBD,IAAI,CAACE,KAAvB,CAAP;AACD,GAFA,CAHH,CADF;AASD;;GAnBQd,W;UAC0BR,Q;;;KAD1BQ,W;AAqBT,eAAeA,WAAf","sourcesContent":["import gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail,\n} from \"@shopify/polaris\";\nimport store from \"store-js\";\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction ProductList() {\n  const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: { ids: store.get(\"ids\") },\n  });\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error.message}</div>;\n\n  console.log(\"this is data:\", data);\n\n  return (\n    <div>\n      <h1>These are the products selected:</h1>\n\n      {data.nodes.map((item) => {\n        return <p key={item.id}>{item.title}</p>;\n      })}\n    </div>\n  );\n}\n\nexport default ProductList;\n"]},"metadata":{},"sourceType":"module"}